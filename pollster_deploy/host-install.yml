---
- hosts: all
  vars:
    netlist: net04_ext,net05_ext
    latitude: 1.1
    longitude: 12.2
    location: IT
    ram_allocation_ratio: 1.5
    cpu_allocation_ratio: 16
  tasks:
  - fail: msg="Variable '{{ item }}' is not defined"
    when: item not in vars
    with_items:
        - branch
  - name: Identify Ceilometer installation path
    shell: pip show ceilometer | grep -i location | tr -s ' ' | cut -d " " -f 2
    register: ceilometer_path_output
  - set_fact:
      ceilometer_path: "{{ ceilometer_path_output.stdout  }}"
  - name: Host pollster - Customize Nova configuration
    blockinfile:
      path: /etc/nova/nova.conf
      block: |
        compute_monitors = ComputeDriverCPUMonitor
        notification_driver = messagingv2
  - name: Downlaod FIWARE monitoring version "{{ branch }}"
    git:
      repo: 'https://github.com/SmartInfrastructures/ceilometer-plugin-fiware.git'
      dest: /tmp/ceilometer-plugin-fiware
      version: "{{ branch }}"
  - name: Host pollster - Copy pollster files to Ceilometer
    command: cp -r /tmp/ceilometer-plugin-fiware/compute_pollster/host.py "{{ ceilometer_path }}/ceilometer/compute/pollster"
  - name: Test availability of HostPollster class
    shell: python -c 'from ceilometer.compute.pollsters import host; print host.HostPollster().__class__'
    register: test_host_class
  - name: Fail the playbook if HostPollster class is not loaded in the system
    fail:
      msg: "HostPollster class is not loaded: {{ test_host_class.stdout }}"
    when: "'ceilometer.compute.pollsters.host.HostPollster' not in test_host_class.stdout"
  - name: Identify entry_points.txt path
    find:
      paths: "{{ ceilometer_path }}"
      recurse: yes
      patterns: "entry_points.txt"
    register: find_results
  - set_fact:
      entry_points_path: "{{ find_results.files[0].path }}"
  - name: Add HostPollster in the entry_points
    become: yes
    lineinfile:
        dest: "{{ entry_points_path }}"
        insertafter: '\[ceilometer\.poll\.compute\]'
        line: 'compute.info = ceilometer.compute.pollsters.host:HostPollster'
        state: present
  - name: Host pollster - Use default pipeline in ceilometer configuration
    copy:
      src: /tmp/ceilometer-plugin-fiware/config/compute/etc/ceilometer/pipeline.yaml
      dest: /etc/ceilometer/pipeline.yaml
      backup: yes
      remote_src: yes
  - name: Discover ceilometer restart command - init.d
    stat:
      path: /etc/init.d/ceilometer-agent-central
    register: initd_check
  - name: Restart ceilometer with init.d
    service:
      name: ceilometer-agent-central restart
      state: restarted
    when: initd_check.stat.exists
  - name: Discover ceilometer restart command - crm
    command: which crm
    register: crm_check
    failed_when: crm_check.rc > 1
    changed_when: false
    ignore_errors: True
  - name: Restart ceilometer with crm
    command: crm resource restart p_ceilometer-agent-central
    when: crm_check.rc == 0
  - name: Restart ceilometer manually
    debug:
      msg: "---> WARNING: Ceilometer restart command not found: please restart ceilometer-agent-central manually <---"
    when: "not initd_check.stat.exists or crm_check == 0"
